@{
    Layout = null;
}
@using Core.Common.Extentions;
@using Core.Common.Enum
@model Core.DTO.Account.AccountDTO
<div class="row form-horizontal form-label-left" style="margin-bottom:15px;">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <fieldset style="width: 100%">
                    <legend>GENERAL</legend>
                    <div class="first-step-group-criteria" style="padding-top:10px; margin-bottom: 10px;">
                        <div class="form-row">
                            
                            <div class="col-md-8 mb-3">
                                <div class="form-row">
                                    <div class="col-md-6 mb-3">
                                        <label>Full Name</label>
                                        @Html.HiddenFor(model => model.Id)
                                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", placeholder = "Name", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.FullName, null, new { @class = "label label-danger" })
                                    </div>

                                    <div class="col-md-6 mb-3">
                                        <label>Email</label>
                                        @if (!string.IsNullOrEmpty(Model.Id))
                                        {
                                            @Html.HiddenFor(model => model.Email)
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = " Email", @autocomplete = "off" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = " Email", @autocomplete = "off" })
                                        }
                                        @Html.ValidationMessageFor(model => model.Email, null, new { @class = "label label-danger" })
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="col-md-6 mb-3">
                                        <label>Password</label>
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Password", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.Password, null, new { @class = "label label-danger" })
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label>Address</label>
                                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", placeholder = "Address", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.Address, null, new { @class = "label label-danger" })
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="col-md-6 mb-3">
                                        <label>Phone</label>
                                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", placeholder = "Phone", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(model => model.Phone, null, new { @class = "label label-danger" })
                                    </div>

                                    <div class="col-md-6 mb-3">
                                        <label>Date Of Birth</label>
                                        <div class='input-group date datetimepicker3' data-date-format="dd-mm-yyyy">
                                            @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control input-group-addon", placeholder = "Date Of Birth" })

                                            <div class="input-group-append input-group-addon">
                                                <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.DateOfBirth, null, new { @class = "label label-danger" })
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="col-md-6 mb-3">
                                        <label>Gender</label>
                                        @Html.DropDownListFor(model => model.Gender,
                                                        new SelectList(EnumCommon.EGender.Male.ToSelectListByDes(), "Value", "Text", Model.Gender), null,
                                                        new
                                                        {
                                                            @class = "form-control cc-select2-gender custom-select",
                                                            @style = "width:100%;",
                                                            @id = "GenderId"
                                                        })
                                        @Html.ValidationMessageFor(model => model.Gender, null, new { @class = "label label-danger" })
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label>Role</label>
                                        @Html.DropDownListFor(model => model.Role,
                                                        new SelectList(EnumCommon.ERole.Admin.ToSelectListByDes(), "Value", "Text", Model.Role), null,
                                                        new
                                                        {
                                                            @class = "form-control cc-select2-gender custom-select",
                                                            @style = "width:100%;",
                                                            @id = "GenderId"
                                                        })
                                        @Html.ValidationMessageFor(model => model.Role, null, new { @class = "label label-danger" })
                                    </div>
                                </div>
                                
                                <div class="form-row">
                                    <div class="col-md-6 mb-3">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label></label>
                                        <div class="form-group">
                                            <div class="custom-control custom-checkbox mr-sm-2">
                                                @Html.CheckBoxFor(model => model.IsActive, new { @class = "icheck custom-control-input", @id = "active" })
                                                <label class="custom-control-label" for="active">Status</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="text-right">
                    <a href="@Url.Action("Index","AccountManagement")" class="btn btn-outline-secondary">Cancel</a>
                    <button class="btn btn-outline-primary" type="submit">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#btn-change-image").on("click", function () {
            $("#PictureUpload").click();
        });

        $("#PictureUpload").on("change", function () {
            PreviewImage(this, 'btn-change-image')
        })

        $('[id=Password]').val('@Model.Password')
    })
    function PreviewImage(e, previewElementID) {
        var oFReader = new FileReader();
        oFReader.readAsDataURL(e.files[0]);

        oFReader.onload = function (oFREvent) {
            document.getElementById(previewElementID).src = oFREvent.target.result;
        };
    };
</script>