@using Core.WEB.MVC.Resources
@{
    //Layout = null;
}
@{
    var info = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
}
@model Core.DTO.Product.ProductDTO

@Html.HiddenFor(model => model.ProductName, new { @id = "productName" })
@Html.HiddenFor(model => model.ProductCode, new { @id = "productCode" })
<div class="col-xl-12 col-lg-12">
    <div class="row">
        <div class="col-xl-5 col-lg-6 col-md-6 mb-xxs-25 mb-xs-25 mb-sm-25">
            <!--=======  big image slider  =======-->
            <div class="big-image-slider-wrapper">
                <div class="ht-slick-slider-modal big-image-slider"
                     data-slick-setting='{
                                "slidesToShow": 1,
                                "slidesToScroll": 1,
                                "dots": false,
                                "autoplay": false,
                                "autoplaySpeed": 5000,
                                "speed": 1000
                            }'
                     data-slick-responsive='[
                                {"breakpoint":1501, "settings": {"slidesToShow": 1} },
                                {"breakpoint":1199, "settings": {"slidesToShow": 1} },
                                {"breakpoint":991, "settings": {"slidesToShow": 1} },
                                {"breakpoint":767, "settings": {"slidesToShow": 1} },
                                {"breakpoint":575, "settings": {"slidesToShow": 1} },
                                {"breakpoint":479, "settings": {"slidesToShow": 1} }
                            ]'>

                    @if (Model.ListImages != null && Model.ListImages.Any())
                    {
                        foreach (var item in Model.ListImages)
                        {
                            <!--=======  big image slider single item  =======-->
                            <div class="big-image-slider-single-item">
                                <img src="@Url.Content(item.ImageURL)" class="img-fluid" alt="">
                            </div>
                            <!--=======  End of big image slider single item  =======-->
                        }
                    }
                </div>
            </div>
            <!--=======  End of big image slider  =======-->
            <!--=======  small image slider  =======-->
            <div class="small-image-slider-wrapper small-image-slider-wrapper--quickview">
                <div class="ht-slick-slider-modal small-image-slider"
                     data-slick-setting='{
                                "slidesToShow": 4,
                                "slidesToScroll": 1,
                                "dots": false,
                                "autoplay": false,
                                "autoplaySpeed": 5000,
                                "speed": 1000,
                                "asNavFor": ".big-image-slider",
                                "focusOnSelect": true,
                                "arrows": true,
                                "prevArrow": {"buttonClass": "slick-prev", "iconClass": "ion-ios-arrow-left" },
                                "nextArrow": {"buttonClass": "slick-next", "iconClass": "ion-ios-arrow-right" }
                            }'
                     data-slick-responsive='[
                                {"breakpoint":1501, "settings": {"slidesToShow": 3} },
                                {"breakpoint":1199, "settings": {"slidesToShow": 3} },
                                {"breakpoint":991, "settings": {"slidesToShow": 3} },
                                {"breakpoint":767, "settings": {"slidesToShow": 3} },
                                {"breakpoint":575, "settings": {"slidesToShow": 2} },
                                {"breakpoint":479, "settings": {"slidesToShow": 2} }
                            ]'>

                    @if (Model.ListImages != null && Model.ListImages.Any())
                    {
                        foreach (var item in Model.ListImages)
                        {
                            <!--=======  small image slider single item  =======-->
                            <div class="small-image-slider-single-item">
                                <img src="@Url.Content(item.ImageURL)" class="img-fluid" alt="">
                            </div>
                            <!--=======  End of small image slider single item  =======-->
                        }
                    }
                </div>
            </div>
            <!--=======  End of small image slider  =======-->
        </div>
        <div class="col-xl-7 col-lg-6 col-md-6">
            <!--=======  product detail content  =======-->
            <div class="product-detail-content">
                <div class="tags mb-5">
                    <span class="tag-title">Tags:</span>
                    <ul class="tag-list">
                        <li><a href="#">@Model.CreatedBy</a></li>
                        @*<li><a href="#">Garden</a></li>*@
                    </ul>
                </div>

                <h3 class="product-details-title mb-15">@Model.ProductName</h3>
                @*<div class="rating">
                        <i class="ion-android-star active"></i>
                        <i class="ion-android-star active"></i>
                        <i class="ion-android-star active"></i>
                        <i class="ion-android-star active"></i>
                        <i class="ion-android-star"></i>
                    </div>*@
                @*<p class="product-price product-price--big mb-10">
                    @if (Model.ProductPriceSale.HasValue && Model.ProductPriceSale.Value > 0 && Model.ProductPriceSale < Model.ProductPrice)
                    {
                        <span class="discounted-price">@String.Format(info, "{0:c0}", Model.ProductPriceSale.Value)</span>
                        <span class="main-price discounted">@String.Format(info, "{0:c0}", Model.ProductPrice)</span>
                    }
                    else
                    {
                        <span class="discounted-price">@String.Format(info, "{0:c0}", Model.ProductPrice)</span>
                    }
                </p>*@

                <div class="product-info-block mb-30">
                    @*<div class="single-info">
                            <span class="title">Ex Tax:</span>
                            <span class="value">$95.00</span>
                        </div>*@
                    <div class="single-info">
                        <span class="title">@General.Brand:</span>
                        <span class="value"><a href="#">Dong Nguyen Xanh</a></span>
                    </div>
                    <div class="single-info">
                        <span class="title">@General.ProductCode:</span>
                        <span class="value">@Model.ProductCode</span>
                    </div>
                    @*<div class="single-info">
                            <span class="title">Availability:</span>
                            <span class="value stock-red">In stock</span>
                        </div>*@
                </div>

                <div class="product-short-desc mb-25">
                    <p>@Html.Raw(Model.ShortDescription)</p>
                </div>

                <div class="quantity mb-20">
                    <span class="quantity-title mr-20">@General.Qty</span>
                    <div class="pro-qty mr-15 mb-lg-20 mb-md-20 mb-sm-20">
                        <input type="number" value="1" id="idQty">
                    </div>
                    <button class="theme-button product-cart-button" id="add-to-cart" data-id="@Model.Id" data-code="@Model.ProductCode" data-name="@Model.ProductName" data-price="@Model.ProductPrice" data-saleprice="@Model.ProductPriceSale" data-imgURL="@Model.ImageURL">+ @General.AddtoCart</button>
                </div>

                @*<div class="compare-button mb-15">
                        <a href="#"><i class="icon-sliders"></i> Compare This Product</a>
                    </div>
                    <div class="wishlist-button">
                        <a href="#"><i class="icon-heart"></i> Add to Wishlist</a>
                    </div>*@
            </div>
            <!--=======  End of product detail content  =======-->
        </div>
    </div>
</div>

<!-- Active JS -->
@*<script src="@Url.Content("~/Content/lib.client/js/active.js")"></script>*@

<script>
    $(document).ready(function () {
        var $htSlickSlider = $('.ht-slick-slider-modal');
        $htSlickSlider.each(function () {
            /*Setting Variables*/
            var $this = $(this),
                $setting = $this.data('slick-setting'),
                $autoPlay = $setting.autoplay ? $setting.autoplay : false,
                $autoPlaySpeed = parseInt($setting.autoplaySpeed, 10) || 2000,
                $speed = parseInt($setting.speed, 10) || 2000,
                $asNavFor = $setting.asNavFor ? $setting.asNavFor : null,
                $appendArrows = $setting.appendArrows ? $setting.appendArrows : $this,
                $appendDots = $setting.appendDots ? $setting.appendDots : $this,
                $arrows = $setting.arrows ? $setting.arrows : false,
                $prevArrow = $setting.prevArrow ? '<button class="' + $setting.prevArrow.buttonClass + '"><i class="' + $setting.prevArrow.iconClass + '"></i></button>' : '<button class="slick-prev">previous</button>',
                $nextArrow = $setting.nextArrow ? '<button class="' + $setting.nextArrow.buttonClass + '"><i class="' + $setting.nextArrow.iconClass + '"></i></button>' : '<button class="slick-next">next</button>',
                $centerMode = $setting.centerMode ? $setting.centerMode : false,
                $centerPadding = $setting.centerPadding ? $setting.centerPadding : '50px',
                $dots = $setting.dots ? $setting.dots : false,
                $fade = $setting.fade ? $setting.fade : false,
                $focusOnSelect = $setting.focusOnSelect ? $setting.focusOnSelect : false,
                $infinite = $setting.infinite ? $setting.infinite : false,
                $pauseOnHover = $setting.pauseOnHover ? $setting.pauseOnHover : true,
                $rows = parseInt($setting.rows, 10) || 1,
                $slidesToShow = parseInt($setting.slidesToShow, 10) || 1,
                $slidesToScroll = parseInt($setting.slidesToScroll, 10) || 1,
                $swipe = $setting.swipe ? $setting.swipe : true,
                $swipeToSlide = $setting.swipeToSlide ? $setting.swipeToSlide : false,
                $variableWidth = $setting.variableWidth ? $setting.variableWidth : false,
                $vertical = $setting.vertical ? $setting.vertical : false,
                $verticalSwiping = $setting.verticalSwiping ? $setting.verticalSwiping : false;
                $rtl = $setting.rtl ? true : false;

            /*Responsive Variable, Array & Loops*/
            var $responsiveSetting = typeof $this.data('slick-responsive') !== 'undefined' ? $this.data('slick-responsive') : '',
                $responsiveSettingLength = $responsiveSetting.length,
                $responsiveArray = [];
            for (var i = 0; i < $responsiveSettingLength; i++) {
                $responsiveArray[i] = $responsiveSetting[i];

            }
            /*Slider Start*/
            $this.slick({
                autoplay: $autoPlay,
                autoplaySpeed: $autoPlaySpeed,
                speed: $speed,
                asNavFor: $asNavFor,
                appendArrows: $appendArrows,
                appendDots: $appendDots,
                arrows: $arrows,
                dots: $dots,
                centerMode: $centerMode,
                centerPadding: $centerPadding,
                fade: $fade,
                focusOnSelect: $focusOnSelect,
                infinite: $infinite,
                pauseOnHover: $pauseOnHover,
                rows: $rows,
                slidesToShow: $slidesToShow,
                slidesToScroll: $slidesToScroll,
                swipe: $swipe,
                swipeToSlide: $swipeToSlide,
                variableWidth: $variableWidth,
                vertical: $vertical,
                verticalSwiping: $verticalSwiping,
                rtl: $rtl,
                prevArrow: $prevArrow,
                nextArrow: $nextArrow,
                responsive: $responsiveArray
            });
        });

        $('.pro-qty').append('<a href="#" class="inc qty-btn">+</a>');
        $('.pro-qty').append('<a href="#" class= "dec qty-btn">-</a>');
        $('.qty-btn').on('click', function (e) {
            e.preventDefault();
            var $button = $(this);
            var oldValue = $button.parent().find('input').val();
            if ($button.hasClass('inc')) {
                var newVal = parseFloat(oldValue) + 1;
            } else {
                // Don't allow decrementing below zero
                if (oldValue > 0) {
                    var newVal = parseFloat(oldValue) - 1;
                } else {
                    newVal = 0;
                }
            }
            $button.parent().find('input').val(newVal);
        });

    });

    $('#add-to-cart').click(function (e) {
        //e.preventDefault();
        var ProductId = $(this).attr('data-id')
        var ProductCode = $(this).attr('data-code')
        var ProductName = $(this).attr('data-name')
        var Qty = $('#idQty').val();
        var ProductPrice = $(this).attr('data-price')
        var ProductSalePrice = $(this).attr('data-saleprice')
        var ImageURL = $(this).attr('data-imgURL')

        var Item = {
            Id: ProductId,
            Code: ProductCode,
            Name: ProductName,
            Price: ProductPrice,
            SalePrice: ProductSalePrice,
            Qty: Qty,
            ImageURL: ImageURL,
        }
        dongnguyenxanh.addToCard(Item)
        //$("#site-cart-handle").click();
    })

</script>
